>>> from topo.base.parameterizedobject import ParameterizedObject
>>> from topo.base.parameterclasses import Number 
>>> from topo.misc.numbergenerators import UniformRandom
>>> from fixedpoint import FixedPoint

#>>> from gmpy import mpq


>>> class TestPO1(ParameterizedObject):
...    x = Number(default=UniformRandom(lbound=-1,ubound=1,seed=1),bounds=(-1,1))
...    y = Number(default=1,bounds=(-1,1))

# CB: Number doesn't accept FixedPoint or mpq in declaration
#...    z = Number(default=FixedPoint('1.00'))
#...    z = Number(default=mpq(1))


## File "/home/ceball/dev/topographica/topo/tests/testNumberParameter.txt", line 8, in testNumberParameter.txt
## Failed example:
##     class TestPO1(ParameterizedObject):
##        x = Number(default=UniformRandom(lbound=-1,ubound=1,seed=1),bounds=(-1,1))
##        y = Number(default=1,bounds=(-1,1))
##        z = Number(default=mpq(1))
## Exception raised:
##     Traceback (most recent call last):
##       File "/home/ceball/dev/topographica//lib/python2.5/doctest.py", line 1212, in __run
##         compileflags, 1) in test.globs
##       File "<doctest testNumberParameter.txt[5]>", line 1, in <module>
##         class TestPO1(ParameterizedObject):
##       File "/home/ceball/dev/topographica/topo/params/parameterized.py", line 456, in __init__
##         mcs.__param_inheritance(param_name,param)
##       File "/home/ceball/dev/topographica/topo/params/parameterized.py", line 572, in __param_inheritance
##         while getattr(param,slot)==None:
##     TypeError: Error when calling the metaclass bases
##         coercion to gmpy.mpq type failed

## File "/home/ceball/dev/topographica/topo/tests/testNumberParameter.txt", line 8, in testNumberParameter.txt
## Failed example:
##     class TestPO1(ParameterizedObject):
##        x = Number(default=UniformRandom(lbound=-1,ubound=1,seed=1),bounds=(-1,1))
##        y = Number(default=1,bounds=(-1,1))
##        z = Number(default=FixedPoint('1.00'))
## Exception raised:
##     Traceback (most recent call last):
##       File "/home/ceball/dev/topographica//lib/python2.5/doctest.py", line 1212, in __run
##         compileflags, 1) in test.globs
##       File "<doctest testNumberParameter.txt[5]>", line 1, in <module>
##         class TestPO1(ParameterizedObject):
##       File "/home/ceball/dev/topographica/topo/params/parameterized.py", line 456, in __init__
##         mcs.__param_inheritance(param_name,param)
##       File "/home/ceball/dev/topographica/topo/params/parameterized.py", line 572, in __param_inheritance
##         while getattr(param,slot)==None:
##       File "/home/ceball/dev/topographica/lib/python2.5/site-packages/fixedpoint.py", line 339, in __cmp__
##         xn, yn, p = _norm(self, other, FixedPoint=type(self))
##       File "/home/ceball/dev/topographica/lib/python2.5/site-packages/fixedpoint.py", line 505, in _norm
##         y = FixedPoint(y, x.p)
##       File "/home/ceball/dev/topographica/lib/python2.5/site-packages/fixedpoint.py", line 259, in __init__
##         raise TypeError("can't convert to FixedPoint: " + `value`)
##     TypeError: can't convert to FixedPoint: None



>>> t1 = TestPO1()


### Test bounds (non-dynamic number)
>>> try:
...     t1.y = 10
... except ValueError:
...     pass
... else:
...     assert False, "Should raise ValueError."


### Test bounds (dynamic number)
>>> t1.x = UniformRandom(lbound=2,ubound=3)  # bounds not checked on set 
>>> try:
...     v1 = t1.x
... except ValueError:
...     pass
... else:
...     assert False, "Should raise ValueError."


### Check Number accepts FixedPoint
#>>> t1.z
#'FixedPoint(1.00)'

>>> t1.x = FixedPoint('0.999',3)
>>> t1.x-=0.0004
>>> t1.x
FixedPoint('0.999', 3)

>>> t1.x-=0.0004
>>> t1.x
FixedPoint('0.999', 3)

>>> t1.x-=0.0004
>>> t1.x
FixedPoint('0.999', 3)


>>> try:
...    t1.x+=0.002
... except ValueError:
...    pass
... else:
...    raise AssertionError("Number's bounds were not respected")








>>> from topo.base.parameterizedobject import ParameterizedObject
>>> from topo.base.parameterclasses import Number 
>>> from topo.misc.numbergenerators import UniformRandom
>>> from fixedpoint import FixedPoint

# CEBALERT: tests needs to use mpq if it's available
# >>> from gmpy import mpq



>>> class TestPO1(ParameterizedObject):
...    x = Number(default=UniformRandom(lbound=-1,ubound=1,seed=1),bounds=(-1,1))
...    y = Number(default=1,bounds=(-1,1))
...    z = Number(default=FixedPoint('1.00'))

#...    z = Number(default=mpq(1))



>>> t1 = TestPO1()


### Test bounds (non-dynamic number)
>>> try:
...     t1.y = 10
... except ValueError:
...     pass
... else:
...     assert False, "Should raise ValueError."


### Test bounds (dynamic number)
>>> t1.x = UniformRandom(lbound=2,ubound=3)  # bounds not checked on set 
>>> try:
...     v1 = t1.x
... except ValueError:
...     pass
... else:
...     assert False, "Should raise ValueError."


### Check Number accepts FixedPoint
>>> t1.z
FixedPoint('1.00', 2)

>>> t1.x = FixedPoint('0.999',3)
>>> t1.x-=0.0004
>>> t1.x
FixedPoint('0.999', 3)

>>> t1.x-=0.0004
>>> t1.x
FixedPoint('0.999', 3)

>>> t1.x-=0.0004
>>> t1.x
FixedPoint('0.999', 3)


>>> try:
...    t1.x+=0.002
... except ValueError:
...    pass
... else:
...    raise AssertionError("Number's bounds were not respected")








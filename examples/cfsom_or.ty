"""
Basic example of a SOM-based orientation map with ConnectionFields.

Contains a Retina (2D Gaussian generator) and a V1 (CFSOM) sheet.
Each V1 neuron receives input from a limited-size square area on the
Retina, called its ConnectionField.

Does not currently match any published simulation, but will probably
be tailored to one in the future.

$Id$
"""
__version__='$Revision$'

import random

from topo.sheets.generatorsheet import GeneratorSheet
from topo.base.patterngenerator import BoundingBox
from topo.base.connectionfield import CFProjection
from topo.base.parameter import DynamicNumber
from topo.sheets.cfsom import CFSOM
from topo.patterns.random import UniformRandomGenerator
from topo.patterns.basic import GaussianGenerator
from topo.base.simulator import Simulator
from topo.learningfns.basic import HebbianSOMLF


###########################################
# Set parameters

# input patterns
GeneratorSheet.period = 1.0
GeneratorSheet.density = 30

GaussianGenerator.x = DynamicNumber(lambda : random.uniform(-0.5,0.5),softbounds=(-1.0,1.0))
GaussianGenerator.y = DynamicNumber(lambda : random.uniform(-0.5,0.5),softbounds=(-1.0,1.0))
GaussianGenerator.orientation = DynamicNumber(lambda :random.uniform(-pi,pi),softbounds=(0,2*pi))
GaussianGenerator.size = 0.3*1.5/7.0
GaussianGenerator.aspect_ratio = 7.0/1.5
GaussianGenerator.bounds = BoundingBox(points=((-0.8,-0.8),(0.8,0.8)))


# cortical sheet
CFSOM.density = 50
CFSOM.learning_length = 10000
CFSOM.radius_0 = 0.1

CFProjection.weights_generator = UniformRandomGenerator()
CFProjection.weights_bounds=BoundingBox(points=((-0.1,-0.1),(0.1,0.1)))

CFProjection.learning_fn=HebbianSOMLF()
###########################################
# build simulation

s = Simulator()

Retina = GeneratorSheet(input_generator=GaussianGenerator(),name='Retina')
V1 = CFSOM(name='V1')
s.connect(Retina,V1,delay=0.5,connection_type=CFProjection,connection_params={'name':'RtoV1'})

s.run(1)
#s.run(10000)

# import profile,pstats
#
# p = profile.Profile()
# p.runctx('s.run(10)',locals(),globals())

"""
Basic example of a SOM-based orientation map with ConnectionFields.

Contains a Retina (2D Gaussian generator) and a V1 (CFSOM) sheet.
Each V1 neuron receives input from a limited-size square area on the
Retina, called its ConnectionField.

Does not currently match any published simulation, but will probably
be tailored to one in the future.

$Id$
"""
__version__='$Revision$'

import RandomArray

import topo.patterns.random
import topo.patterns.basic
 
from topo.base.boundingregion import BoundingBox
from topo.base.cf import CFProjection
from topo.base.parameterclasses import DynamicNumber,Wrapper
from topo.base.simulator import Simulator
from topo.learningfns.som import HebbianSOMLF
from topo.patterns import PatternGeneratorParameter
from topo.responsefns.optimized import CFProjectionDotProduct_opt1
from topo.sheets.cfsom import CFSOM
from topo.sheets.generatorsheet import GeneratorSheet
from topo.misc.numbergenerators import RandomWrapper

# Weight seed
RandomArray.seed(500,500)

# Input pattern
gaussian_generator = topo.patterns.basic.Gaussian(
  x = DynamicNumber(RandomWrapper("uniform",-0.5,0.5,seed=12)),
  y = DynamicNumber(RandomWrapper("uniform",-0.5,0.5,seed=34)),
  orientation = DynamicNumber(RandomWrapper("uniform",-pi,pi,seed=56)),
  size = 2*0.3*1.5/7.0,
  aspect_ratio = 7.0/1.5,
  bounds = BoundingBox(radius=0.8))

# Sheets, connections, and their parameters
topo.sim['Retina'] = GeneratorSheet(input_generator=gaussian_generator,
                                    period=1.0,density=30)

topo.sim['V1'] = CFSOM(density=locals().get('default_density',50.0),
                       learning_length=10000,radius_0=0.1,alpha_0=0.5)

topo.sim.connect('Retina','V1',delay=0.5,connection_type=CFProjection,
                  weights_generator = topo.patterns.random.UniformRandom(),
                  weights_bounds=BoundingBox(radius=0.1),
                  response_fn = CFProjectionDotProduct_opt1(),
                  learning_fn=HebbianSOMLF())

topo.sim.run(0)
